__d((function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.prepareBiconomyTransaction=w,e.relayBiconomyTransaction=async function(t){const[n,s]=await w(t),o=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{body:(0,p.stringify)({apiId:t.gasless.apiId,from:n.from,gasLimit:n.txGas,params:[n,s],to:n.to}),headers:{"Content-Type":"application/json;charset=utf-8","x-api-key":t.gasless.apiKey},method:"POST"});if(!o.ok)throw new Error(`Failed to send transaction: ${await o.text()}`);const h=await o.json(),y=h.txHash;if((0,c.isHex)(y))return{chain:t.transaction.chain,client:t.transaction.client,transactionHash:y};throw new Error(`Failed to send transaction: ${(0,p.stringify)(h)}`)};var t=r(d[0]),n=r(d[1]),s=r(d[2]),o=r(d[3]),c=r(d[4]),h=r(d[5]),p=r(d[6]),y=r(d[7]);const u=0n;async function w({account:c,serializableTransaction:p,transaction:w,gasless:l}){const f=(0,s.getContract)({address:l.relayerForwarderAddress,chain:w.chain,client:w.client}),b=await(0,y.readContract)({contract:f,method:"function getNonce(address,uint256) view returns (uint256)",params:[c.address,u]}),x=Math.floor(Date.now()/1e3)+(l.deadlineSeconds??3600),k={batchId:u,batchNonce:b,data:p.data,deadline:x,from:c.address,to:p.to,token:n.ZERO_ADDRESS,tokenGasPrice:0n,txGas:p.gas};if(!k.to)throw new Error("Cannot send a transaction without a `to` address");if(!k.txGas)throw new Error("Cannot send a transaction without a `gas` value");if(!k.data)throw new Error("Cannot send a transaction without a `data` value");const v=(0,t.encodeAbiParameters)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[(0,o.getAddress)(k.from),(0,o.getAddress)(k.to),(0,o.getAddress)(k.token),k.txGas,k.tokenGasPrice,k.batchId,k.batchNonce,(0,h.keccak256)(k.data)]);return[k,await c.signMessage({message:v})]}}),2900,[1254,1237,1238,1210,1224,1225,1136,2407]);